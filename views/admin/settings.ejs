<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>System Settings - Admin Dashboard</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
      min-height: 100vh;
      font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
    }

    .container {
      padding: 2rem 1rem;
      max-width: 1200px;
    }

    .page-header {
      margin-bottom: 2rem;
      color: #2d3748;
    }

    .page-header h1 {
      font-size: 2.5rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }

    .page-header p {
      color: #718096;
      font-size: 1.1rem;
      margin-bottom: 0;
    }

    .settings-card {
      background: rgba(255, 255, 255, 0.95);
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      margin-bottom: 2rem;
    }

    .settings-card h2 {
      color: #2d3748;
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid #e2e8f0;
    }

    .settings-section {
      margin-bottom: 2rem;
    }

    .settings-section:last-child {
      margin-bottom: 0;
    }

    .form-switch {
      padding-left: 3em;
    }

    .form-switch .form-check-input {
      width: 3em;
      height: 1.5em;
      margin-left: -3em;
    }

    .form-switch .form-check-input:checked {
      background-color: #4299e1;
      border-color: #4299e1;
    }

    .notification-item {
      padding: 1rem;
      border-radius: 10px;
      background: #f7fafc;
      margin-bottom: 1rem;
      transition: all 0.3s ease;
    }

    .notification-item:hover {
      background: #edf2f7;
    }

    .notification-item .notification-title {
      font-weight: 600;
      color: #2d3748;
      margin-bottom: 0.5rem;
    }

    .notification-item .notification-meta {
      font-size: 0.875rem;
      color: #718096;
    }

    .notification-item .notification-actions {
      margin-top: 1rem;
    }

    .btn-custom {
      padding: 0.5rem 1rem;
      border-radius: 8px;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .btn-custom:hover {
      transform: translateY(-1px);
    }

    .color-picker-wrapper {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .color-preview {
      width: 40px;
      height: 40px;
      border-radius: 8px;
      border: 2px solid #e2e8f0;
    }

    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }

      .page-header h1 {
        font-size: 2rem;
      }

      .settings-card {
        padding: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar') %>
  <%- include('../partials/admin-navbar') %>

  <div class="container">
    <div class="page-header">
      <h1><i class="fas fa-cogs me-2"></i>System Settings</h1>
      <p>Configure system preferences and manage notifications</p>
    </div>

    <div class="row">
      <!-- System Settings -->
      <div class="col-lg-8">
        <div class="settings-card">
          <h2><i class="fas fa-sliders-h me-2"></i>General Settings</h2>
          
          <form id="settingsForm" action="/admin/settings" method="POST">
            <!-- Email Notifications -->
            <div class="settings-section">
              <h3 class="h5 mb-3">Email Notifications</h3>
              <div class="mb-3 form-switch">
                <input type="checkbox" class="form-check-input" id="newUserNotif" name="notifications.newUser" <%= settings.notifications.newUser ? 'checked' : '' %>>
                <label class="form-check-label" for="newUserNotif">New user registrations</label>
              </div>
              <div class="mb-3 form-switch">
                <input type="checkbox" class="form-check-input" id="largeTransNotif" name="notifications.largeTransactions" <%= settings.notifications.largeTransactions ? 'checked' : '' %>>
                <label class="form-check-label" for="largeTransNotif">Large transactions (over $1000)</label>
              </div>
              <div class="mb-3 form-switch">
                <input type="checkbox" class="form-check-input" id="systemAlertsNotif" name="notifications.systemAlerts" <%= settings.notifications.systemAlerts ? 'checked' : '' %>>
                <label class="form-check-label" for="systemAlertsNotif">System alerts and warnings</label>
              </div>
            </div>

            <!-- Security Settings -->
            <div class="settings-section">
              <h3 class="h5 mb-3">Security</h3>
              <div class="mb-3">
                <label class="form-label">Session Timeout (minutes)</label>
                <input type="number" class="form-control" name="security.sessionTimeout" value="<%= settings.security.sessionTimeout %>" min="5" max="120">
              </div>
              <div class="mb-3 form-switch">
                <input type="checkbox" class="form-check-input" id="twoFactorAuth" name="security.twoFactorAuth" <%= settings.security.twoFactorAuth ? 'checked' : '' %>>
                <label class="form-check-label" for="twoFactorAuth">Require 2FA for admin actions</label>
              </div>
            </div>

            <!-- Display Settings -->
            <div class="settings-section">
              <h3 class="h5 mb-3">Display</h3>
              <div class="mb-3">
                <label class="form-label">Items per page</label>
                <select class="form-select" name="display.itemsPerPage">
                  <option value="10" <%= settings.display.itemsPerPage === 10 ? 'selected' : '' %>>10</option>
                  <option value="25" <%= settings.display.itemsPerPage === 25 ? 'selected' : '' %>>25</option>
                  <option value="50" <%= settings.display.itemsPerPage === 50 ? 'selected' : '' %>>50</option>
                  <option value="100" <%= settings.display.itemsPerPage === 100 ? 'selected' : '' %>>100</option>
                </select>
              </div>
              <div class="mb-3">
                <label class="form-label">Theme Color</label>
                <div class="color-picker-wrapper">
                  <input type="color" class="form-control form-control-color" name="display.themeColor" value="<%= settings.display.themeColor %>" title="Choose theme color">
                  <div class="color-preview" style="background-color: <%= settings.display.themeColor %>"></div>
                </div>
              </div>
            </div>

            <div class="text-end">
              <button type="submit" class="btn btn-primary btn-custom">
                <i class="fas fa-save me-2"></i>Save Settings
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Notifications Panel -->
      <div class="col-lg-4">
        <div class="settings-card">
          <h2><i class="fas fa-bell me-2"></i>Recent Notifications</h2>
          
          <% if (notifications && notifications.length > 0) { %>
            <% notifications.forEach(notification => { %>
              <div class="notification-item">
                <div class="notification-title">
                  <i class="<%= notification.icon %> me-2"></i>
                  <%= notification.title %>
                </div>
                <div class="notification-meta">
                  <i class="fas fa-clock me-1"></i>
                  <%= new Date(notification.date).toLocaleString() %>
                </div>
                <div class="notification-content mt-2">
                  <%= notification.message %>
                </div>
                <div class="notification-actions">
                  <button class="btn btn-sm btn-outline-primary me-2" onclick="markAsRead('<%= notification._id %>')">
                    <i class="fas fa-check me-1"></i>Mark as Read
                  </button>
                  <button class="btn btn-sm btn-outline-danger" onclick="deleteNotification('<%= notification._id %>')">
                    <i class="fas fa-trash me-1"></i>Delete
                  </button>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center text-muted py-4">
              <i class="fas fa-bell-slash fa-3x mb-3"></i>
              <p>No new notifications</p>
            </div>
          <% } %>

          <div class="text-center mt-3">
            <a href="/admin/notifications" class="btn btn-outline-primary btn-custom">
              <i class="fas fa-list me-2"></i>View All Notifications
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  <script>
    // Update color preview when color picker changes
    document.querySelector('input[type="color"]').addEventListener('input', function(e) {
      document.querySelector('.color-preview').style.backgroundColor = e.target.value;
    });

    // Handle form submission
    document.getElementById('settingsForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      const settings = Object.fromEntries(formData);

      try {
        const response = await fetch('/admin/settings', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(settings)
        });

        if (response.ok) {
          alert('Settings saved successfully!');
        } else {
          throw new Error('Failed to save settings');
        }
      } catch (error) {
        console.error('Error saving settings:', error);
        alert('Failed to save settings. Please try again.');
      }
    });

    // Handle notification actions
    async function markAsRead(notificationId) {
      try {
        const response = await fetch(`/admin/notifications/${notificationId}/read`, {
          method: 'POST'
        });

        if (response.ok) {
          location.reload();
        } else {
          throw new Error('Failed to mark notification as read');
        }
      } catch (error) {
        console.error('Error marking notification as read:', error);
        alert('Failed to mark notification as read. Please try again.');
      }
    }

    async function deleteNotification(notificationId) {
      if (!confirm('Are you sure you want to delete this notification?')) return;

      try {
        const response = await fetch(`/admin/notifications/${notificationId}`, {
          method: 'DELETE'
        });

        if (response.ok) {
          location.reload();
        } else {
          throw new Error('Failed to delete notification');
        }
      } catch (error) {
        console.error('Error deleting notification:', error);
        alert('Failed to delete notification. Please try again.');
      }
    }
  </script>
</body>
</html>
